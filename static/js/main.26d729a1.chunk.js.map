{"version":3,"sources":["components/Header/SHeader.styled.js","components/Header/index.js","container/Board/Board.styled.js","utility.js","container/Card/SCard.styled.js","components/TaskItem/STaskItem.styled.js","components/TaskItem/index.js","components/Label/Label.styled.js","components/Label/index.js","components/TextArea/STextArea.styled.js","components/TextArea/index.js","hooks/useClickOutside.js","components/EditableField/index.js","components/TaskList/index.js","components/Button/Button.styled.js","components/Button/index.js","components/EditPopUp/EditPopup.styled.js","components/EditPopUp/index.js","container/Card/index.js","container/Board/index.js","components/Wrapper/SWrapper.styled.js","components/Wrapper/index.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["SHeader","styled","div","SNavbar","Header","children","SBoard","section","uniqID","Math","random","toString","substr","saveToStorage","COLS","COLUMNS","JSON","stringify","localStorage","setItem","SCardWrapper","SCard","SCardHeader","SCardBody","SCardFooter","STaskItem","STaskDescription","p","TaskItem","description","onClick","defaultProps","SLabel","h2","Label","value","props","STextArea","textarea","title","TextArea","placeholder","useOnClickOutside","ref","handler","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","EditableField","content","type","useRef","useState","setValue","editMode","setEditMode","toggleEditeMode","onChange","e","TaskLists","tasks","onDragStart","map","task","draggable","desc","id","SButton","button","primary","Button","SPopupWrapper","display","SPopupContainer","primaryPopup","EditPopup","callback","buttonTitle","textareaPlaceHolder","textValue","setText","isPopupOpen","setPopupOpen","togglePopup","style","marginTop","preventDefault","Card","columnId","handleAddTask","TaskList","text","Board","cols","columns","seColumns","draggedTask","setDraggedTask","columnTitle","newTask","newColumns","col","push","onDragOver","onDrop","filter","flexDirection","newCols","order","length","handleAddColumn","Wrapper","App","getItem","parse","loadFromStorage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.26d729a1.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst SHeader = styled.div`\r\n  padding: 0.3rem;\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n`;\r\nconst SNavbar = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align: center;\r\n  background: #ffffff4a;\r\n  border-radius: 3px;\r\n  padding: 0.5rem;\r\n  width: 100%;\r\n  color: white;\r\n  height: 35px;\r\n`;\r\n\r\nexport { SHeader, SNavbar };\r\n","import React from \"react\";\r\nimport { SHeader, SNavbar } from \"./SHeader.styled\";\r\n\r\nconst Header = ({ children }) => {\r\n  return (\r\n    <SHeader>\r\n      <SNavbar>{children}</SNavbar>\r\n    </SHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nconst SBoard = styled.section`\r\n  user-select: none;\r\n  white-space: nowrap;\r\n  margin-bottom: 8px;\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n  padding-bottom: 8px;\r\n  position: absolute;\r\n  top: 70px;\r\n  height: 90vh;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n`;\r\n\r\nexport default SBoard;\r\n","// GENERATE A RANDOM UNIQUE ID\r\n\r\nconst uniqID = () => \"_\" + Math.random().toString(36).substr(2, 9);\r\n\r\n// save to localStorage\r\n\r\nconst saveToStorage = (COLS) => {\r\n  let COLUMNS = JSON.stringify(COLS);\r\n  localStorage.setItem(\"COLUMNS\", COLUMNS);\r\n};\r\n\r\n// LOAD FROM LOCALSTORAGE\r\nconst loadFromStorage = () => {\r\n  let columns = localStorage.getItem(\"COLUMNS\");\r\n  return columns ? JSON.parse(columns) : [];\r\n};\r\n\r\nexport { uniqID, saveToStorage, loadFromStorage };\r\n","import styled from \"styled-components\";\r\n\r\nconst SCardWrapper = styled.div`\r\n  width: 272px;\r\n  margin: 0 4px;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  white-space: nowrap;\r\n`;\r\nconst SCard = styled.div`\r\n  background-color: #ebecf0;\r\n  border-radius: 3px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-height: 100%;\r\n  position: relative;\r\n  white-space: normal;\r\n`;\r\n\r\nconst SCardHeader = styled.div`\r\n  width: inherit;\r\n\r\n  height: 40px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst SCardBody = styled.div`\r\n  width: inherit;\r\n  padding: 0 0.5rem;\r\n`;\r\nconst SCardFooter = styled.div`\r\n  width: inherit;\r\n  padding: 0.5rem;\r\n  color: #172b4d;\r\n`;\r\n\r\nexport { SCardWrapper, SCard, SCardHeader, SCardBody, SCardFooter };\r\n","import styled from \"styled-components\";\r\n\r\nconst STaskItem = styled.div`\r\n  padding: 0.5rem;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  box-shadow: 0 1px 0 rgb(9 30 66 / 25%);\r\n  cursor: pointer;\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  max-width: 300px;\r\n  min-height: 20px;\r\n  position: relative;\r\n  text-decoration: none;\r\n  z-index: 0;\r\n  cursor: move;\r\n`;\r\nconst STaskDescription = styled.p`\r\n  min-height: 20px;\r\n  min-width: 50px;\r\n  width: fit-content;\r\n  cursor: text;\r\n`;\r\n\r\nexport { STaskItem, STaskDescription };\r\n","import React from \"react\";\r\nimport { STaskDescription, STaskItem } from \"./STaskItem.styled\";\r\n\r\nconst TaskItem = ({ description, onClick }) => {\r\n  return (\r\n    <STaskItem>\r\n      <STaskDescription onClick={onClick}>{description}</STaskDescription>\r\n    </STaskItem>\r\n  );\r\n};\r\nTaskItem.defaultProps = {\r\n  // TASK BREF DESCRIPTION\r\n  description: \"\",\r\n\r\n  // EVENT HANDLER ONCLICK ON THE TEXT\r\n  onClick: () => {},\r\n};\r\nexport default TaskItem;\r\n","import styled from \"styled-components\";\r\n\r\nconst SLabel = styled.h2`\r\n  color: #3e4f6b;\r\n  font-size: 0.8rem;\r\n  padding: 0.5rem 0.5rem 0.5rem 0.8rem;\r\n  margin: 0px;\r\n`;\r\n\r\nexport { SLabel };\r\n","import React from \"react\";\r\nimport { SLabel } from \"./Label.styled\";\r\n\r\nconst Label = ({ value, ...props }) => <SLabel {...props}>{value}</SLabel>;\r\n\r\nLabel.defaultProps = {\r\n  // String\r\n  value: \"\",\r\n};\r\n\r\nexport default Label;\r\n","import styled from \"styled-components\";\r\n\r\nconst STextArea = styled.textarea`\r\n  width: 100%;\r\n  background-color: white;\r\n  border: solid 2px #0079bf;\r\n  border-radius: 4px;\r\n  max-height: ${({ title }) => (title ? \"39px\" : \"inherit\")};\r\n  height: max-content;\r\n\r\n  vertical-align: middle;\r\n  padding: 10px 0 0 5px;\r\n  &:focus {\r\n    outline: none;\r\n    border: solid 2px #0079bf;\r\n  }\r\n`;\r\n\r\nexport { STextArea };\r\n","import React from \"react\";\r\nimport { STextArea } from \"./STextArea.styled\";\r\nconst TextArea = ({ placeholder, value, ...props }) => {\r\n  return <STextArea placeholder={placeholder} value={value} {...props} />;\r\n};\r\n\r\nTextArea.defaultProps = {\r\n  placeholder: \"Add Description ...\",\r\n  value: \"\",\r\n};\r\nexport default TextArea;\r\n","import { useEffect } from \"react\";\r\n/**\r\n *\r\n * @param {objec} ref conmponent ref\r\n * @param {func} handler callback\r\n */\r\nconst useOnClickOutside = (ref, handler) => {\r\n  useEffect(\r\n    () => {\r\n      const listener = (event) => {\r\n        // Do nothing if clicking ref's element or descendent elements\r\n        if (!ref.current || ref.current.contains(event.target)) {\r\n          return;\r\n        }\r\n        handler(event);\r\n      };\r\n      document.addEventListener(\"mousedown\", listener);\r\n      document.addEventListener(\"touchstart\", listener);\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", listener);\r\n        document.removeEventListener(\"touchstart\", listener);\r\n      };\r\n    },\r\n    // Add ref and handler to effect dependencies\r\n    // It's worth noting that because passed in handler is a new ...\r\n    // ... function on every render that will cause this effect ...\r\n    // ... callback/cleanup to run every render. It's not a big deal ...\r\n    // ... but to optimize you can wrap handler in useCallback before ...\r\n    // ... passing it into this hook.\r\n    [ref, handler]\r\n  );\r\n};\r\n\r\nexport default useOnClickOutside;\r\n","import React, { useState, useRef } from \"react\";\r\nimport TaskItem from \"../TaskItem\";\r\nimport Label from \"../Label\";\r\nimport TextArea from \"../TextArea\";\r\n// Hooks\r\nimport useOnClickOutside from \"../../hooks/useClickOutside\";\r\n\r\nconst EditableField = ({ content, type, ...props }) => {\r\n  // ref\r\n  const ref = useRef();\r\n\r\n  // current value of the editable field (title of column / desc of task)\r\n  const [value, setValue] = useState(content);\r\n\r\n  // edite mode (enabled / disabled)\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  // handle toggle edit mode\r\n  const toggleEditeMode = () => {\r\n    setEditMode(!editMode);\r\n  };\r\n  const handleChangeContent = (e) => setValue(e.target.value);\r\n\r\n  useOnClickOutside(ref, () => setEditMode(false));\r\n  return (\r\n    <div ref={ref} {...props}>\r\n      {editMode ? (\r\n        <TextArea\r\n          onChange={handleChangeContent}\r\n          value={value}\r\n          placeholder={\"Add Column title ...\"}\r\n          title\r\n        />\r\n      ) : type === \"list\" ? (\r\n        <TaskItem onClick={toggleEditeMode} description={value} />\r\n      ) : (\r\n        <Label onClick={toggleEditeMode} value={value} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditableField;\r\n","import React from \"react\";\r\nimport EditableField from \"../EditableField\";\r\n//import DraggableItems from \"../DraggableItems\";\r\nconst TaskLists = ({ tasks, onDragStart }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <div key={task.id} onDragStart={onDragStart(task)} draggable>\r\n          <EditableField key={task.id} content={task.desc} type=\"list\" />\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskLists;\r\n","import styled from \"styled-components\";\r\n\r\nconst SButton = styled.button`\r\n  background-color: ${({ primary }) =>\r\n    primary ? \"#0079bf\" : \"rgba(9, 30, 66, 0.04)\"};\r\n  box-shadow: none;\r\n  border: none;\r\n  color: ${({ primary }) => (primary ? \"#fff\" : \"#5e6c84\")};\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  padding: 6px 12px;\r\n  text-decoration: none;\r\n  margin-right: 0.5rem;\r\n  box-shadow: none;\r\n  border: none;\r\n  transition-property: background-color, border-color, box-shadow;\r\n  transition-duration: 85ms;\r\n  transition-timing-function: ease;\r\n  &:hover {\r\n    background-color: ${({ primary }) =>\r\n      primary ? \"#0079bf\" : \"rgba(9, 30, 66, 0.08)\"};\r\n  }\r\n`;\r\n\r\nexport { SButton };\r\n","import React from \"react\";\r\nimport { SButton } from \"./Button.styled\";\r\n\r\nconst Button = ({ title, ...props }) => <SButton {...props}>{title}</SButton>;\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nconst filter = styled.div`\r\n  position: absolute;\r\n  height: 100vh;\r\n  display: ${({ display }) => (display ? \"block\" : \"none\")};\r\n  width: 100vw;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 11;\r\n  background: #2e36439e;\r\n`;\r\nexport default filter;\r\n\r\nconst SPopupWrapper = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 100%;\r\n  max-width: 272px;\r\n`;\r\nconst SPopupContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #ebecf0;\r\n  padding: ${({ primaryPopup }) => (primaryPopup ? \"0.5rem\" : \"0\")};\r\n  border-radius: 3px;\r\n`;\r\n\r\nexport { SPopupContainer, SPopupWrapper };\r\n","import React, { useRef, useState } from \"react\";\r\nimport Button from \"../Button\";\r\nimport TextArea from \"../TextArea\";\r\nimport { SPopupContainer, SPopupWrapper } from \"./EditPopup.styled\";\r\nimport useOnClickOutside from \"../../hooks/useClickOutside\";\r\n\r\nconst EditPopup = ({\r\n  callback,\r\n  buttonTitle,\r\n  textareaPlaceHolder,\r\n  primaryPopup,\r\n}) => {\r\n  // Create a ref that we add to the element for which we want to detect outside clicks\r\n  const ref = useRef();\r\n\r\n  // state for our text in the textarea\r\n  const [textValue, setText] = useState(\"\");\r\n\r\n  // State for our Popup\r\n  const [isPopupOpen, setPopupOpen] = useState(false);\r\n\r\n  // handle change text\r\n  const handleChangeText = (e) => setText(e.target.value);\r\n\r\n  // toggle popup\r\n  const togglePopup = () => {\r\n    setPopupOpen(!isPopupOpen);\r\n  };\r\n\r\n  // upload changed text\r\n  const handleUploadText = (e) => {\r\n    e.preventDefault();\r\n    if (textValue) {\r\n      callback(textValue);\r\n      togglePopup();\r\n    }\r\n  };\r\n  // Call hook passing in the ref and a function to call on outside click\r\n  useOnClickOutside(ref, () => setPopupOpen(false));\r\n  return (\r\n    <SPopupWrapper ref={ref}>\r\n      {isPopupOpen ? (\r\n        <SPopupContainer primaryPopup={primaryPopup}>\r\n          <TextArea\r\n            onChange={handleChangeText}\r\n            placeholder={textareaPlaceHolder}\r\n            value={textValue}\r\n          />\r\n\r\n          <div style={{ marginTop: \"0.5rem\" }}>\r\n            <Button primary title={buttonTitle} onClick={handleUploadText} />\r\n            <Button title={\"x\"} onClick={togglePopup} />\r\n          </div>\r\n        </SPopupContainer>\r\n      ) : (\r\n        <Button\r\n          primary={primaryPopup}\r\n          title={buttonTitle}\r\n          onClick={togglePopup}\r\n        />\r\n      )}\r\n    </SPopupWrapper>\r\n  );\r\n};\r\nEditPopup.defaultProps = {\r\n  textareaPlaceHolder: \"Add Task Description ...\",\r\n  callback: () => {},\r\n  buttonTitle: \"+ Add a Task\",\r\n  primaryPopup: false,\r\n};\r\nexport default EditPopup;\r\n","import React from \"react\";\r\nimport {\r\n  SCardWrapper,\r\n  SCard,\r\n  SCardHeader,\r\n  SCardBody,\r\n  SCardFooter,\r\n} from \"./SCard.styled\";\r\nimport EditableField from \"../../components/EditableField\";\r\nimport TaskList from \"../../components/TaskList\";\r\nimport EditPopup from \"../../components/EditPopUp\";\r\n\r\nconst Card = ({\r\n  columnId,\r\n  title,\r\n  tasks,\r\n  handleAddTask,\r\n  onDragStart,\r\n  ...props\r\n}) => {\r\n  /**\r\n   * HANDLE ADD NEW TASK DESCRIPTION\r\n   * @param {string} text\r\n   * @returns\r\n   */\r\n  const handleTaskDesc = (text) => handleAddTask(text, columnId, title);\r\n\r\n  return (\r\n    <SCardWrapper {...props}>\r\n      <SCard>\r\n        <SCardHeader>\r\n          <EditableField content={title} />\r\n        </SCardHeader>\r\n        <SCardBody>\r\n          <TaskList tasks={tasks} onDragStart={onDragStart} />\r\n        </SCardBody>\r\n        <SCardFooter>\r\n          <EditPopup callback={handleTaskDesc} />\r\n        </SCardFooter>\r\n      </SCard>\r\n    </SCardWrapper>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\nimport SBoard from \"./Board.styled\";\r\n\r\nimport { uniqID, saveToStorage } from \"../../utility\";\r\n\r\nimport Card from \"../Card\";\r\nimport EditPopup from \"../../components/EditPopUp\";\r\n\r\nconst Board = ({ cols }) => {\r\n  // COLUMN STATE\r\n  const [columns, seColumns] = useState(cols);\r\n\r\n  // DRAGGED TASK STATE\r\n  const [draggedTask, setDraggedTask] = useState(null);\r\n\r\n  /**\r\n   * ADD COLUMN TITLE HANDLER\r\n   * @param {string} title\r\n   */\r\n  const handleAddColumn = (title) => {\r\n    let newCols = [\r\n      ...columns,\r\n      {\r\n        id: uniqID(),\r\n        order: columns.length + 1,\r\n        title,\r\n        tasks: [],\r\n      },\r\n    ];\r\n    seColumns(newCols);\r\n\r\n    // SAVE ADD NEW COLUMNS TO LOCAL STORAGE\r\n    saveToStorage(newCols);\r\n  };\r\n\r\n  // Add task to the specific column\r\n  /**\r\n   *\r\n   * @param {string} desc  task description\r\n   * @param {string} columnId columnId\r\n   * @param {sting} columnTitle columnTitle\r\n   * @returns\r\n   */\r\n  const handleAddTask = (desc, columnId, columnTitle) => {\r\n    let newTask = {\r\n      id: uniqID(),\r\n      columnTitle,\r\n      desc,\r\n    };\r\n\r\n    let newColumns = [...columns].map((col) => {\r\n      if (col.id === columnId) {\r\n        col.tasks.push(newTask);\r\n      }\r\n      return col;\r\n    });\r\n    seColumns(newColumns);\r\n    saveToStorage(newColumns);\r\n  };\r\n  // onDragover\r\n  const onDragOver = (e) => e.preventDefault();\r\n\r\n  /**\r\n   *\r\n   * @param {string} title\r\n   * @returns\r\n   */\r\n  const onDrop = (title) => (e) => {\r\n    let newColumns = [...columns].map((col) => {\r\n      if (col.title === draggedTask.columnTitle) {\r\n        col.tasks = col.tasks.filter((task) => task.id !== draggedTask.id);\r\n      }\r\n\r\n      if (col.title === title) {\r\n        col.tasks.push({ ...draggedTask, columnTitle: title });\r\n      }\r\n      return col;\r\n    });\r\n    // CLEAR ADD TASK\r\n    setDraggedTask(null);\r\n\r\n    // UPDATE COLUMN\r\n    seColumns(newColumns);\r\n\r\n    // SAVE TO LOCAL STORAGE AFTER DRAGGING\r\n    saveToStorage(newColumns);\r\n  };\r\n\r\n  /**\r\n   * DRAGSTART EVENT HANDLER\r\n   * @param {object} task\r\n   * @returns\r\n   */\r\n  const onDragStart = (task) => (e) => {\r\n    //initialize dragged task\r\n    setDraggedTask(task);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n      <div>navbar</div>\r\n      <SBoard>\r\n        {columns.map(({ id, title, tasks }) => (\r\n          <Card\r\n            onDragStart={onDragStart}\r\n            onDragOver={onDragOver}\r\n            onDrop={onDrop(title)}\r\n            key={id}\r\n            columnId={id}\r\n            title={title}\r\n            tasks={tasks}\r\n            handleAddTask={handleAddTask}\r\n          />\r\n        ))}\r\n        <EditPopup\r\n          primaryPopup\r\n          buttonTitle={\"+ Add Column\"}\r\n          textareaPlaceHolder={\"Add Column Title ...\"}\r\n          callback={(text) => handleAddColumn(text)}\r\n        />\r\n      </SBoard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport SWrapper from \"./SWrapper.styled\";\r\n\r\nconst Wrapper = ({ children }) => {\r\n  return <SWrapper>{children}</SWrapper>;\r\n};\r\n\r\nexport default Wrapper;\r\n","import { uniqID } from \"./utility\";\r\n\r\nlet columns = [\r\n  {\r\n    id: uniqID(),\r\n    order: 1,\r\n    title: \"To Do\",\r\n    tasks: [\r\n      { id: uniqID(), columnTitle: \"To Do\", desc: \"task six\", order: 1 },\r\n      { id: uniqID(), columnTitle: \"To Do\", desc: \"task seven\", order: 2 },\r\n      { id: uniqID(), columnTitle: \"To Do\", desc: \"task nine\", order: 3 },\r\n    ],\r\n  },\r\n  {\r\n    id: uniqID(),\r\n    order: 2,\r\n    title: \"in Progress\",\r\n    tasks: [\r\n      { id: uniqID(), columnTitle: \"In Progress\", desc: \"task one\", order: 1 },\r\n      { id: uniqID(), columnTitle: \"In Progress\", desc: \"task twp\", order: 2 },\r\n      {\r\n        id: uniqID(),\r\n        columnTitle: \"In Progress\",\r\n        desc: \"task three\",\r\n        order: 3,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: uniqID(),\r\n    order: 3,\r\n    title: \"Done\",\r\n    tasks: [\r\n      { id: uniqID(), columnTitle: \"Done\", desc: \"task four\", order: 1 },\r\n      { id: uniqID(), columnTitle: \"Done\", desc: \"task five\", order: 2 },\r\n      { id: uniqID(), columnTitle: \"Done\", desc: \"task ten\", order: 3 },\r\n    ],\r\n  },\r\n  {\r\n    id: uniqID(),\r\n    order: 4,\r\n    title: \"test\",\r\n    tasks: [],\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","import Header from \"./components/Header\";\nimport Board from \"./container/Board\";\nimport Wrapper from \"./components/Wrapper\";\nimport columns from \"./data\";\nimport { loadFromStorage } from \"./utility\";\nimport \"./App.css\";\n\nfunction App() {\n  const cols = loadFromStorage(\"COLUMNS\") || columns;\n\n  /**\n   * I CHOOSED NOT TO USE CONTEXT (fix prop drilling)\n   */\n  return (\n    <Wrapper>\n      <Header> Trello </Header>\n      <Board cols={cols} />\n    </Wrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}